[{"title":"PBC库的常用函数解释","date":"2017-01-18T10:59:57.000Z","path":"2017/01/18/PBC库的常用函数解释/","text":"PBC库使用G1、G2和GT分别表示双线性映射:e:G1xG2-&gt;GT中的G1、G2和GT，他们的阶都为r。Zr表示模r的整数环。配对运算输入两个元素，一个元素来自群G1，另一个元素来自群G2，输出结果是GT中的一个元素。G1和G2也可以是同一个群，即是一个对称配对，这种情况下它们的元素可以相互混淆使用。 1.配对的初始化方式1) 以标准的方式初始化配对12pairing_t pairing;//声明一个配对类型的变量pairingpairing_init_inp_str(pairing,stdin);//参数stdin表示配对的输入参数方式为标准输入 2) 指定类型的方式初始化配对1234a_param_input(pairing);//将配对变量pairing初始化为类型A的配对d_param_input(pairing);//将配对变量pairing初始化为类型D的配对f_param_input(pairing);//将配对变量pairing初始化为类型F的配对pairing_clear(pairing);//调用该函数释放pairing占用的资源 2.元素的初始化1234567void element_init(element_t e,field_ptr f);//将元素变量e初始化为代数结构f中的元素void element_init_G1(element_t e,pairing_t pairing);//将元素变量e初始化为群G1中的元素void element_init_G2(element_t e,pairing_t pairing);//将元素变量e初始化为群G2中的元素void element_init_GT(element_t e,pairing_t pairing);//将元素变量e初始化为群GT中的元素void element_init_Zr(element_t e,pairing_t pairing);//将元素变量e初始化为群Zr中的元素void element_init_same_as(element_t e,element_t e2);//将元素变量e初始化为元素变量e2所在的代数结构中的元素void element_clear(element_t e);//清楚元素变量e并释放其所占用的资源 3.运算函数1234567891011121314151617void element_add(element_t n,element_t a,element_t b);//输入a和b，输出n=a+bvoid element_sub(element_t n,element_t a,element_t b);//输入a和b，输出n=a-bvoid element_mul(element_t n,element_t a,element_t b);//输入a和b，输出n=axbvoid element_mul_si(element_t n,element_t a,signed long int z);//输入a和z，输出n=axz,z是一个长整型数据void element_mul_zn(element_t n,element_t a,element_t z);//输入a和z，输出n=axz,z是整数环中的一个元素void element_div(element_t n,element_t a,element_t b);//输入a和b，输出n=a/bvoid element_double(element_t n,element_t a);//输入a，输出n=a+avoid element_halve(element_t n,element_t a);//输入a，输出n=a/2void element_square(element_t n,element_t a);//输入a，输出n=a^2void element_neg(element_t n,element_t a);//输入a，输出n=-avoid element_invert(element_t n,element_t a);//输入a，输出a的逆元nvoid element_pow_mpz(element_t x,element_t a,mpz_t n);//输入a和n，输出x=a^nvoid element_pow_zn(element_t x,element_t a,element_t n);//输入a和n，输出x=a^n，n是整数环中的元素//输入a1,a2和n1,n2，输出x=a1^n1xa2^n2void element_pow2_mpz(element_t x,element_t a1,mpz_t n1,element_t a2,mpz_t n2);//输入a1,a2和n1,n2，输出x=a1^n1xa2^n2,n1,n2是整数环中的元素void element_pow2_zn(element_t x,element_t a1,element_t n1,element_t a2,element_t n2); 4.其它函数1234567int element_length_in_bytes(element_t e);//获得元素变量e的字节数void element_random(element_t e);//函数从这个代数结构中均匀随机选择一个元素并赋值给eint element_cmp(element_t a,element_t b);//若变量a和b相等，则函数返回0否则返回1void element_to_mpz(mpz_t z,element_t e);//将元素e转换为一个GMP整数并存储在mpz_t类型的变量z中//PBC库中没有提供计算Hash值的函数，这里只是以获得的Hash值作为输入，从中截取一部分表示域中的某个元素void element_from_hash(element_t e,void * data,int len);int element_printf(const char * format,...);//格式化打印元素值 以上列举了PBC库中的一些常用函数及其代表的意思，如有特殊需求可查阅PBC官方文档。","tags":[{"name":"PBC","slug":"PBC","permalink":"http://harmansecurity.cn/tags/PBC/"},{"name":"密码学","slug":"密码学","permalink":"http://harmansecurity.cn/tags/密码学/"},{"name":"双线性配对","slug":"双线性配对","permalink":"http://harmansecurity.cn/tags/双线性配对/"}]},{"title":"VC6.0插件安装","date":"2017-01-17T06:49:04.000Z","path":"2017/01/17/VC6.0插件安装/","text":"因为PBC源码库的一些函数不是很全，导致用VS写了几个程序只好放弃，而支持VC6.0的PBC库比较全，绕了一圈所以只好转战VC++6.0。VC++6.0是一款很老的工具，不是很人性化，对于我这个深度完美主义者肯定是不能接受的，想方设法使它更适合开发，所以安装了一些插件，使开发效率更高。 我主要安装的插件是:1.Visual studio Boosteer;(源码窗口管理) 下载地址:http://pan.baidu.com/s/1pJAZApP. 功能:方便查看源码，一页里面可以打开多个C文件。 2.Visual assist Options;(强烈推荐) 下载地址:http://pan.baidu.com/s/1dDh7Mtb. 功能:自动识别各种关键字，系统函数，成员变量，自动给出输入提示，自动更正大小写错误，自动标示错误等等。 3.为了解决VC++6.0不能添加和打开文件的功能安装了FileTool。 下载地址:http://download.csdn.net/detail/ttfy1234/9696351. 功能:VC6.0在添加和打开文件时经常会崩掉，这个插件就是为了解决这个问题。 4.VC6LineNumberAddin; 下载地址:http://pan.baidu.com/s/1dD8CfGd 功能:VC6.0不自带行号，不方便阅读查找，这个是行号插件。 5.Comment Wizard; 下载地址:http://www.cppblog.com/fwxjj/. 功能:Visual C++插件，提供了VC源代码注解标准化与自动化功能。在它的帮助下，您可快速创建标头文件信息注解，文件中模块注解， C++处理方式，以及Ｃ语言功能与历史校正功能注解等等。 6.WndTabs+3.20 实现窗口tab效果。 下载地址:http://www.wndtabs.com/. 功能:WndTabs主要是在编辑窗口中显示了所有已经打开的文件，在VC中能够更方便的操作这些文件，比如修改文件属性，copy文件路径、文件名等,与第一个VS Booster的功能相近。 参考的资料: http://blog.csdn.net/cooljun618/article/details/6866798 http://bbs.csdn.net/topics/390776572 一个人性化的环境搭好了,下面就是导入项目，官网给的支持VC的PBC源码直接打开有点问题，这边我直接把调通好的源码放在GitHub上面，有需要的人可以去下载，地址是:https://github.com/harmansecurity/PBC-0.4.7-vc6.0.","tags":[{"name":"PBC","slug":"PBC","permalink":"http://harmansecurity.cn/tags/PBC/"},{"name":"密码学","slug":"密码学","permalink":"http://harmansecurity.cn/tags/密码学/"},{"name":"VC6.0","slug":"VC6-0","permalink":"http://harmansecurity.cn/tags/VC6-0/"}]},{"title":"这半年为什么止步不前？","date":"2017-01-15T14:42:06.000Z","path":"2017/01/15/2016总结/","text":"时间过得很快，读研已半年，这半年来我一直都没好好想过这个问题，这半年我到底做了什么？我试着给自己答案——积累、沉淀，但是却有种莫名的心虚。 回顾2016年下半年的历程。七月份，在中科院信工所的物联网安全研发中心实习。去之前，本以为是朝九晚五的上班场景，心里还是忐忑的，结果与我想的截然相反，这里都是研究生，学习氛围很浓厚。那段日子应该就是我研究生阶段的预备期，或许是因为仰慕那些学姐学长基础扎实，编码能力强，为了缩短差距，我坚持每天早晨八点打卡，每晚坚持跑步回去到宿舍已基本十二点，从未给过自己一天的休息时间。当时我的任务是“如何检测内存异常访问”，因为项目的需求，需要了解Linux内核，期间泛读了《Python核心编程》、《鸟哥的Linux私房菜》、《Linux内核完全注释》(强烈推荐)，这三本书可以当做字典来用，没有必要全部读完。也重温了《计算机操作系统》、《计算机组成原理》、《深入理解计算机系统》。在这次实习中，最大的感受就是理论知识的缺乏，大学里面的基础课程在日后还是有很大作用的，于是决定利用接下来的三年时间多积累沉淀，多看些书。 入学的那段时间还是比较空闲的，我的计划是先看两本自己研究领域的书籍，虽然导师这边是偏理论，但其实自己对应用还是很热衷的，所以决定再看两本WEB安全的入门书籍。所看的密码学书：《图解密码技术》、《深入浅出密码学》、《基于配对的密码学》；WEB安全相关的书：《WEB安全前端黑客技术解密》、《XSS跨站脚本》(未读完)、《SQL注入攻击与防御》(未读)，此外对余弦发布的技能表做了相应的对照学习。 写到这里，也差不多能知道问题出在哪了：在理论上没有多大的进展，仍处于连门都没入的阶段，程序写的不多，没有学习太多的新技术，这就是莫名心虚的原因。最初的想法是先偏理论，不管是否选择继续走学术这条路都要发论文，研一暑假再决定最终是否工作。可能是心急了，要是很多东西一下子就能见成果，那就没多大意义了。或许临近期末的原因，躁动不安，扰乱了情绪，胡思乱想。 —2016.1.5 by LiangHui 最近也在思考，当初为什么会有读博的想法？“因为之前做的一些东西，只知道如何去实现而不知道机制和原理，想在博士期间好好深入研究。”通过这半年的了解,很多其实并不是当初所想的那样，博士是在一个很小的方向上进行研究并能作出自己的突破。如果读现在的方向的博士达不到当初想要的效果，所以必须明确到底想要什么！接下来的一年将会把重心放在web安全技术上，利用空余的时间多读点书，多去实践。早做决定，早做打算。 —2016.1.15","tags":[{"name":"总结","slug":"总结","permalink":"http://harmansecurity.cn/tags/总结/"}]}]