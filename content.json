[{"title":"Java基础学习笔记(三)","date":"2017-03-19T14:36:21.000Z","path":"2017/03/19/Java基础学习笔记(三)/","text":"03.01_Java语言基础(逻辑运算符的基本用法)(掌握) A:逻辑运算符有哪些 &amp;,|,^,! &amp;&amp;,|| B:案例演示 逻辑运算符的基本用法 注意事项： a:逻辑运算符一般用于连接boolean类型的表达式或者值。 b:表达式：就是用运算符把常量或者变量连接起来的符合java语法的式子。 算术表达式：a + b 比较表达式：a == b(条件表达式) C:结论： &amp;逻辑与:有false则false。 |逻辑或:有true则true。 ^逻辑异或:相同为false，不同为true。 !逻辑非:非false则true，非true则false。 特点：偶数个不改变本身。 03.02_Java语言基础(逻辑运算符&amp;&amp;和&amp;的区别)(掌握) A:案例演示 &amp;&amp;和&amp;的区别? a:最终结果一样。 b:&amp;&amp;具有短路效果。左边是false，右边不执行。 &amp;是无论左边是false还是true,右边都会执行 B:同理||和|的区别?(学生自学) C:开发中常用谁? &amp;&amp;,||,! 03.03_Java语言基础(位运算符的基本用法1)(了解) A:位运算符有哪些 &amp;,|,^,~ ,&gt;&gt;,&gt;&gt;&gt;,&lt;&lt; B:案例演示 位运算符的基本用法1 &amp;,|,^,~ 的用法 &amp;:有0则0 |:有1则1 ^:相同则0，不同则1 ~:按位取反 03.04_Java语言基础(位异或运算符的特点及面试题)(掌握) A:案例演示 位异或运算符的特点 ^的特点：一个数据对另一个数据位异或两次，该数本身不变。 B:面试题： 请自己实现两个整数变量的交换 注意：以后讲课的过程中，我没有明确指定数据的类型，默认int类型。 03.05_Java语言基础(位运算符的基本用法2及面试题)(了解) A:案例演示 &gt;&gt;,&gt;&gt;&gt;,&lt;&lt;的用法: &lt;&lt;:左移 左边最高位丢弃，右边补齐0 :右移 最高位是0，左边补齐0;最高为是1，左边补齐1 :无符号右移 无论最高位是0还是1，左边补齐0 最有效率的算出2 * 8的结果 03.06_Java语言基础(三元运算符的基本用法)(掌握) A:三元运算符的格式 (关系表达式) ? 表达式1 : 表达式2; B:三元运算符的执行流程 C:案例演示 获取两个数中的最大值 03.07_Java语言基础(三元运算符的练习)(掌握) A:案例演示 比较两个整数是否相同 B:案例演示 获取三个整数中的最大值 03.08_Java语言基础(键盘录入的基本格式讲解)(掌握) A:为什么要使用键盘录入数据 a:为了让程序的数据更符合开发的数据 b:让程序更灵活一下 B:如何实现键盘录入呢? 先照格式来。 a:导包 格式： import java.util.Scanner; 位置： 在class上面。 b:创建键盘录入对象 格式： Scanner sc = new Scanner(System.in); c:通过对象获取数据 格式： int x = sc.nextInt(); C:案例演示 键盘录入1个整数，并输出到控制台。 键盘录入2个整数，并输出到控制台。 03.09_Java语言基础(键盘录入的练习1)(掌握) A:案例演示 键盘录入练习：键盘录入两个数据，并对这两个数据求和，输出其结果 B:案例演示 键盘录入练习：键盘录入两个数据，获取这两个数据中的最大值 03.10_Java语言基础(键盘录入的练习2)(掌握) A:案例演示 键盘录入练习：键盘录入两个数据，比较这两个数据是否相等 B:案例演示 键盘录入练习：键盘录入三个数据，获取这三个数据中的最大值 03.11_Java语言基础(顺序结构语句)(了解) A:什么是流程控制语句 流程控制语句：可以控制程序的执行流程。 B:流程控制语句的分类 顺序结构 选择结构 循环结构 C:执行流程： 从上往下，依次执行。 D:案例演示 输出几句话看效果即可 03.12_Java语言基础(选择结构if语句格式1及其使用)(掌握) A:选择结构的分类 if语句 switch语句 B:if语句有几种格式 格式1 格式2 格式3 C:if语句的格式1 if(比较表达式) { 语句体; } D:执行流程： 先计算比较表达式的值，看其返回值是true还是false。 如果是true，就执行语句体； 如果是false，就不执行语句体； 03.13_Java语言基础(选择结构if语句注意事项)(掌握) A:案例演示 a:比较表达式无论简单还是复杂，结果必须是boolean类型 b:if语句控制的语句体如果是一条语句，大括号可以省略； 如果是多条语句，就不能省略。建议永远不要省略。 c:一般来说：有左大括号就没有分号，有分号就没有左大括号 03.14_Java语言基础(选择结构if语句格式2及其使用)(掌握) A:if语句的格式2 if(比较表达式) { 语句体1; }else { 语句体2; } B:执行流程： 首先计算比较表达式的值，看其返回值是true还是false。 如果是true，就执行语句体1； 如果是false，就执行语句体2； C:案例演示 a:获取两个数据中较大的值 b:判断一个数据是奇数还是偶数,并输出是奇数还是偶数 注意事项：else后面是没有比较表达式的，只有if后面有。 03.15_Java语言基础(if语句的格式2和三元的相互转换问题)(掌握) A:案例演示 if语句和三元运算符完成同一个效果 B:案例演示 if语句和三元运算符的区别 三元运算符实现的，都可以采用if语句实现。反之不成立。 什么时候if语句实现不能用三元改进呢? 当if语句控制的操作是一个输出语句的时候就不能。 为什么呢?因为三元运算符是一个运算符，运算符操作完毕就应该有一个结果，而不是一个输出。 03.16_Java语言基础(选择结构if语句格式3及其使用)(掌握) A:if语句的格式3： if(比较表达式1) { 语句体1; }else if(比较表达式2) { 语句体2; }else if(比较表达式3) { 语句体3; } ... else { 语句体n+1; } B:执行流程： 首先计算比较表达式1看其返回值是true还是false， 如果是true，就执行语句体1，if语句结束。 如果是false，接着计算比较表达式2看其返回值是true还是false， 如果是true，就执行语句体2，if语句结束。 如果是false，接着计算比较表达式3看其返回值是true还是false， 如果都是false，就执行语句体n+1。 C:注意事项:最后一个else可以省略,但是建议不要省略,可以对范围外的错误值提示 03.17_Java语言基础(选择结构if语句格式3练习)(掌握) A:练习1 需求：键盘录入一个成绩，判断并输出成绩的等级。 90-100 优 80-89 良 70-79 中 60-69 及 0-59 差 B:练习2 需求： 键盘录入x的值，计算出y的并输出。 x&gt;=3 y = 2 * x + 1; -1&lt;x&lt;3 y = 2 * x; x&lt;=-1 y = 2 * x - 1; 03.18_Java语言基础(选择结构if语句的嵌套使用)(掌握) A:案例演示 需求：获取三个数据中的最大值 if语句的嵌套使用。 03.19_Java语言基础(选择结构switch语句的格式及其解释)(掌握) A:switch语句的格式 switch(表达式) { case 值1： 语句体1; break; case 值2： 语句体2; break; … default： 语句体n+1; break; } B:switch语句的格式解释 C:面试题 byte可以作为switch的表达式吗? long可以作为switch的表达式吗? String可以作为switch的表达式吗? C:执行流程 先计算表达式的值 然后和case后面的匹配，如果有就执行对应的语句，否则执行default控制的语句 03.20_Java语言基础(选择结构switch语句的练习)(掌握) A:整数(给定一个值,输出对应星期几) 03.21_Java语言基础(选择结构switch语句的注意事项)(掌握) A:案例演示 a:case后面只能是常量，不能是变量，而且，多个case后面的值不能出现相同的 b:default可以省略吗? 可以省略，但是不建议，因为它的作用是对不正确的情况给出提示。 特殊情况： case就可以把值固定。 A,B,C,D c:break可以省略吗? 最后一个可以省略,其他最好不要省略 会出现一个现象：case穿透。 最终我们建议不要省略 d:default一定要在最后吗? 不是，可以在任意位置。但是建议在最后。 e:switch语句的结束条件 a:遇到break就结束了 b:执行到switch的右大括号就结束了 03.22_Java语言基础(选择结构switch语句练习)(掌握) A:看程序写结果： int x = 2; int y = 3; switch(x){ default: y++; break; case 3: y++; case 4: y++; } System.out.println(&quot;y=&quot;+y); B:看程序写结果： int x = 2; int y = 3; switch(x){ default: y++; case 3: y++; case 4: y++; } System.out.println(&quot;y=&quot;+y); 03.23_Java语言基础(选择结构if语句和switch语句的区别)(掌握) A:总结switch语句和if语句的各自使用场景 switch建议判断固定值的时候用 if建议判断区间或范围的时候用 B:案例演示 分别用switch语句和if语句实现下列需求： 键盘录入月份，输出对应的季节 03.24_day03总结把今天的知识点总结一遍。","tags":[{"name":"Java语言基础","slug":"Java语言基础","permalink":"http://harmansecurity.cn/tags/Java语言基础/"},{"name":"流程控制语句","slug":"流程控制语句","permalink":"http://harmansecurity.cn/tags/流程控制语句/"},{"name":"逻辑运算符","slug":"逻辑运算符","permalink":"http://harmansecurity.cn/tags/逻辑运算符/"}]},{"title":"Java基础学习笔记(二)","date":"2017-03-19T14:35:21.000Z","path":"2017/03/19/Java基础学习笔记(二)/","text":"02.01_Java语言基础(常量的概述和使用)(掌握) A:什么是常量 在程序执行的过程中其值不可以发生改变 B:Java中常量的分类 字面值常量 自定义常量(面向对象部分讲) C:字面值常量的分类 字符串常量 用双引号括起来的内容 整数常量 所有整数 小数常量 所有小数 字符常量 用单引号括起来的内容,里面只能放单个数字,单个字母或单个符号 布尔常量 较为特殊，只有true和false 空常量 null(数组部分讲解) D:案例演示 用输出语句输出各种常量。null不演示 02.02_Java语言基础(进制概述和二,八,十六进制图解)(了解) A:什么是进制 进制：就是进位制，是人们规定的一种进位方法。 对于任何一种进制–X进制，就表示某一位置上的数运算时是逢X进一位。二进制就是逢二进一，八进制是逢八进一，十进制是逢十进一，十六进制是逢十六进一。 例如一周有七天,七进制,一年有十二个月,十二进制 B:十进制的由来 十进制的由来是因为人类有十个手指 C:二进制的由来 其实二进制来源与中国,请看史料记载 18世纪德国数理哲学大师莱布尼兹从他的传教士朋友鲍威特寄给他的拉丁文译本《易经》中，读到了八卦的组成结构，惊奇地发现其基本素数（0）（1），即《易经》的阴爻yao- -和__阳爻，其进位制就是二进制，并认为这是世界上数学进制中最先进的。20世纪被称作第三次科技革命的重要标志之一的计算机的发明与应用，其运算模式正是二进制。它不但证明了莱布尼兹的原理是正确的，同时也证明了《易经》数理学是很了不起的。 D:八进制的由来 任何数据在计算机中都是以二进制的形式存在的。二进制早期由电信号开关演变而来。一个整数在内存中一样也是二进制的，但是使用一大串的1或者0组成的数值进行使用很麻烦。 所以就想把一大串缩短点，将二进制中的三位用一位表示。这三位可以取到的最大值就是7.超过7就进位了，这就是八进制。 E:十六进制的由来 但是对于过长的二进制变成八进制还是较长，所以出现的用4个二进制位表示一位的情况，四个二进制位最大是15，这就是十六进制。 F:不同进制表现同一个数据的形式特点 进制越大，表现形式越短 02.03_Java语言基础(不同进制数据的表现形式)(掌握) A:二进制的数据表现形式 由0,1组成。以0b(b可以大写也可以小写)开头(JDK1.7版本可以表示二进制了) B:八进制的数据表现形式 由0,1,…7组成。以0开头 C:十进制的数据表现形式 由0,1,…9组成。整数默认是十进制的 D:十六进制的数据表现形式 由0,1,…9,a,b,c,d,e,f(大小写均可)。以0x开头 E:案例演示 输出不同进制表现100的数据。 0b100 0100 100 0x100 02.04_Java语言基础(任意进制到十进制的转换图解)(了解) A:任意进制到十进制的转换原理 系数：就是每一位上的数据。 基数：X进制，基数就是X。 权：在右边，从0开始编号，对应位上的编号即为该位的权。 结果：把系数*基数的权次幂相加即可。 B:画图练习 二进制–十进制 八进制–十进制 十六进制–十进制 02.05_Java语言基础(十进制到任意进制的转换图解)(了解) A:十进制到任意进制的转换原理 除积倒取余 B:画图练习 十进制–二进制 十进制–八进制 十进制–十六进制 02.06_Java语言基础(快速的进制转换法)(了解) A:8421码及特点 8421码是中国大陆的叫法，8421码是BCD代码中最常用的一种。在这种编码方式中每一位二值代码的1都是代表一个固定数值，把每一位的1代表的十进制数加起来，得到的结果就是它所代表的十进制数码。 B:通过8421码的方式进行二进制和十进制的相互转换 C:二进制到八进制的简易方式 D:二进制到十六进制的简易方式 02.07_Java语言基础(原码反码补码)(了解) A:为什么要学习原码反码补码? 后面要学习强制类型转换,如果不知道有原反补会看不懂结果 B:有符号数据表示法的几种方式 原码 就是二进制定点表示法，即最高位为符号位，“0”表示正，“1”表示负，其余位表示数值的大小。 通过一个字节,也就是8个二进制位表示+7和-7 0(符号位) 0000111 1(符号位) 0000111 反码 正数的反码与其原码相同；负数的反码是对其原码逐位取反，但符号位除外。 补码 正数的补码与其原码相同；负数的补码是在其反码的末位加1。 02.08_Java语言基础(原码反码补码的练习)(了解) A:已知原码求补码 0b10110100 B:已知补码求原码 0b11101110 02.09_Java语言基础(变量的概述及格式)(掌握) A:什么是变量 在程序执行的过程中，在某个范围内其值可以发生改变的量 B:变量的定义格式 数据类型 变量名 = 变量值; C:为什么要定义变量 用来不断的存放同一类型的常量，并可以重复使用 02.10_Java语言基础(数据类型的概述和分类)(掌握) A:为什么有数据类型 Java语言是强类型语言，对于每一种数据都定义了明确的具体数据类型，在内存中分配了不同大小的内存空间 B:Java中数据类型的分类 基本数据类型 引用数据类型 面向对象部分讲解 C:基本数据类型分类(4类8种) 整数型 byte 占一个字节 -128到127 short 占两个字 -2^15~2^15-1 int 占四个字节 -2^31~2^31-1 long 占八个字节 -2^63~2^63-1 浮点型 float 占四个字节 -3.403E38~3.403E38 单精度 double 占八个字节-1.798E308~1.798E308 双精度 字符型 char 占两个字节 0~65535 布尔型 boolean boolean理论上是占八分之一个字节,因为一个开关就可以决定是true和false了,但是java中boolean类型没有明确指定他的大小 02.11_Java语言基础(定义不同数据类型的变量)(掌握) A:案例演示 定义不同基本数据类型的变量，并输出 赋值时候注意float类型,long类型 02.12_Java语言基础(使用变量的注意事项)(掌握) A:案例演示 a:作用域问题 同一个区域不能使用相同的变量名 b:初始化值问题 局部变量在使用之前必须赋值 c:一条语句可以定义几个变量 int a,b,c…; 02.13_Java语言基础(数据类型转换之隐式转换)(掌握) A:案例演示 a:int + int b:byte + int B:Java中的默认转换规则 取值范围小的数据类型与取值范围大的数据类型进行运算,会先将小的数据类型提升为大的,再运算 C:画图解释byte+int类型的问题 02.14_Java语言基础(数据类型转换之强制转换)(掌握) A:强制转换问题 int a = 10; byte b = 20; b = a + b; B:强制转换的格式 b = (byte)(a + b); C:强制转换的注意事项 如果超出了被赋值的数据类型的取值范围得到的结果会与你期望的结果不同 02.15_Java语言基础(面试题之变量相加和常量相加的区别)(掌握) A:案例演示 面试题:看下面的程序是否有问题，如果有问题，请指出并说明理由。 byte b1 = 3; byte b2 = 4; byte b3 = b1 + b2; 从两方面去回答这个题 b1和b2是两个变量,变量里面存储的值都是变化的,所以在程序运行中JVM是无法判断里面具体的值 byte类型的变量在进行运算的时候,会自动类型提升为int类型 byte b4 = 3 + 4; 3和4都是常量,java有常量优化机制,就是在编译的的时候直接把3和4的结果赋值给b4了 02.16_Java语言基础(long与float的取值范围谁大谁小)(了解) 进行混合运算的时候,byte,short,char不会相互转换,都会自动类型提升为int类型,其他类型进行混合运算的是小的数据类型提升为大的 byte,short,char – int – long – float – double long: 8个字节 float：4个字节 IEEE754 4个字节是32个二进制位 1位是符号位 8位是指数位 00000000 11111111 0到255 1到254 -126到127 23位是尾数位 每个指数位减去127 A:它们底层的存储结构不同。 B:float表示的数据范围比long的范围要大 long：2^63-1 float：3.4*10^38 &gt; 2*10^38 &gt; 2*8^38 = 2*2^3^38 = 2*2^114 &gt; 2^63-1 02.17_Java语言基础(字符和字符串参与运算)(掌握) A:案例演示 System.out.println(‘a’); System.out.println(‘a’+1); 通过看结果知道’a’的值是多少,由此引出ASCII码表 B:ASCII码表的概述 记住三个值： ‘0’ 48 ‘A’ 65 ‘a’ 97 C:案例演示 System.out.println(“hello”+’a’+1); System.out.println(‘a’+1+”hello”); D:+在有字符串参与中被称为字符串连接符 System.out.println(“5+5=”+5+5); System.out.println(5+5+”=5+5”); 02.18_Java语言基础(char数据类型)(掌握) A:char c = 97; 0到65535 B:Java语言中的字符char可以存储一个中文汉字吗?为什么呢? 可以。因为Java语言采用的是Unicode编码。Unicode编码中的每个字符占用两个字节。中文也是占的两个字节 所以，Java中的字符可以存储一个中文汉字 02.19_Java语言基础(算术运算符的基本用法)(掌握) A:什么是运算符 就是对常量和变量进行操作的符号。 B:运算符的分类 算术运算符，赋值运算符，比较(关系或条件)运算符，逻辑运算符，位运算符，三目(元)运算符 C:算数运算符有哪些 +,-,*,/,%,++,– D:注意事项： a:+号在java中有三种作用,代表正号,做加法运算,字符串的连接符 b:整数相除只能得到整数。如果想得到小数，必须把数据变化为浮点数类型 c:/获取的是除法操作的商，%获取的是除法操作的余数 %运算符 当左边的绝对值小于右边绝对值时,结果是左边 当左边的绝对值等于右边或是右边的倍数时,结果是0 当左边的绝对值大于右边绝对值时,结果是余数 %运算符结果的符号只和左边有关系,与右边无关 任何一个正整数%2结果不是0就是1可以用来当作切换条件 02.20_Java语言基础(算术运算符++和–的用法)(掌握) A:++,–运算符的作用 自加（++）自减（–）运算 ++:自加。对原有的数据进行+1 –:自减。对原有的数据进行-1 B:案例演示 a:单独使用： 放在操作数的前面和后面效果一样。(这种用法是我们比较常见的) b:参与运算使用： 放在操作数的前面，先自增或者自减，然后再参与运算。 放在操作数的后面，先参与运算，再自增或者自减。 02.21_Java语言基础(算术运算符++和–的练习)(掌握) A:案例演示 请分别计算出a,b,c的值?1234567891011121314 int a = 10; int b = 10; int c = 10; a = b++; c = --a; b = ++a; a = c--; ``` * B:案例演示 * 请分别计算出x,y的值?```java int x = 4; int y = (x++)+(++x)+(x*10); C:面试题 byte b = 10; b++; b = b + 1; 问哪句会报错,为什么 02.22_Java语言基础(赋值运算符的基本用法)(掌握) A:赋值运算符有哪些 a:基本的赋值运算符：= 把=右边的数据赋值给左边。 b:扩展的赋值运算符：+=,-=,*=,/=,%= += 把左边和右边做加法，然后赋值给左边。 02.23_Java语言基础(赋值运算符的面试题)(掌握) A:案例演示 面试题:看下面的程序是否有问题，如果有问题，请指出并说明理由。 short s=1;s = s+1; short s=1;s+=1; 02.24_Java语言基础(关系运算符的基本用法及其注意事项)(掌握) A:关系运算符有哪些(比较运算符,条件运算符) ==,!=,&gt;,&gt;=,&lt;,&lt;= 注意事项： 无论你的操作是简单还是复杂，结果是boolean类型。 “==”不能写成”=”。 02.25_day02总结 把今天的知识点总结一遍。","tags":[{"name":"Java语言基础","slug":"Java语言基础","permalink":"http://harmansecurity.cn/tags/Java语言基础/"},{"name":"数据类型","slug":"数据类型","permalink":"http://harmansecurity.cn/tags/数据类型/"},{"name":"运算符","slug":"运算符","permalink":"http://harmansecurity.cn/tags/运算符/"}]},{"title":"Java基础学习笔记(一)","date":"2017-03-19T14:34:21.000Z","path":"2017/03/19/Java基础学习笔记(一)/","text":"01.01_计算机基础知识(计算机概述)(了解) A:什么是计算机?计算机在生活中的应用举例 计算机（Computer）全称：电子计算机，俗称电脑。是一种能够按照程序运行，自动、高速处理海量数据的现代化智能电子设备。由硬件和软件所组成，没有安装任何软件的计算机称为裸机。常见的形式有台式计算机、笔记本计算机、大型计算机等。 应用举例 1：科学计算 2、数据处理 3、自动控制 4、计算机辅助设计 5、人工智能 6、多媒体应用 7、计算机网络 … B:什么是硬件?硬件举例 计算机硬件（Computer Hardware）是指计算机系统中由电子，机械和光电元件等组成的各种物理装置的总称。这些物理装置按系统结构的要求构成一个有机整体为计算机软件运行提供物质基础。 冯.诺依曼体系结构 计算机的硬件分成5大组成部件：运算器、控制器、存储器、输入设备和输出设备。 运算器和控制器是计算机的核心，合称中央处理单元（Central Processing Unit，CPU）或处理器。CPU的内部还有一些高速存储单元，被称为寄存器。其中运算器执行所有的算术和逻辑运算；控制器负责把指令逐条从存储器中取出，经译码后向计算机发出各种控制命令；而寄存器为处理单元提供操作所需要的数据。 存储器是计算机的记忆部分，用来存放程序以及程序中涉及的数据。它分为内部存储器和外部存储器。内部存储器用于存放正在执行的程序和使用的数据，其成本高、容量小，但速度快。外部存储器可用于长期保存大量程序和数据，其成本低、容量大，但速度较慢。 输入设备和输出设备统称为外部设备，简称外设或I/O设备，用来实现人机交互和机间通信。微型机中常用的输入设备有键盘、鼠标等，输出设备有显示器、打印机等。 C:什么是软件?软件分类及举例 计算机软件(Computer Software)是使用计算机过程中必不可少的东西，计算机软件可以使计算机按照事先预定好的顺序完成特定的功能 计算机软件按照其功能划分为系统软件与应用软件 系统软件： DOS(Disk Operating System), Windows, Linux, Unix, Mac, Android, iOS 应用软件：office QQ聊天 YY语言 扫雷 01.02_计算机基础知识(软件开发和计算机语言概述)(了解) A:什么是软件 按照特定顺序组织的计算机数据和指令的集合 B:什么是开发 软件的制作过程 C:什么是软件开发 借助开发工具与计算机语言制作软件 D:什么是计算机语言 人与计算机之间进行信息交流沟通的一种特殊语言 E:计算机语言的分类 机器语言： 机器语言是直接用二进制代码指令表达的计算机语言，指令是用0和1组成的一串代码，它们有一定的位数，并分成若干段，各段的编码表示不同的含义。 汇编语言： 汇编语言是使用一些特殊的符号来代替机器语言的二进制码，计算机不能直接识别，需要用一种软件将汇编语言翻译成机器语言。 高级语言： 使用普通英语进行编写源代码，通过编译器将源代码翻译成计算机直接识别的机器语言，之后再由计算机执行。 高级语言包括C,C++,C#,JAVA 01.03_计算机基础知识(人机交互)(了解) A:人机交互的两种方式 a:命令行方式 需要有一个控制台，输入特定的指令，让计算机完成一些操作。较为麻烦，需要记录住一些命令。 b:图形化界面方式 这种方式简单直观，使用者易于接受，容易上手操作。 01.04_计算机基础知识(键盘功能键和快捷键)(掌握) A:键盘功能键 a:Tab b:Shift c:Ctrl d:Alt e:空格 f:Enter g:Window h:上下左右键 i:PrtSc(PrintScreen)屏幕截图 B:键盘快捷键 a:Ctrl+A 全选 b:Ctrl+C 复制 c:Ctrl+V 粘贴 d:Ctrl+X 剪切 e:Ctrl+Z 撤销 f:Ctrl+S 保存 01.05_计算机基础知识(如何打开DOS控制台)(掌握) A:xp下如何打开DOS控制台？ a:开始–程序–附件–命令提示符 b:开始–运行–cmd–回车 c:win+r–cmd–回车 B:win7下如何打开DOS控制台？ a:开始–所有程序–附件–命令提示符 b:开始–搜索程序和文件–cmd–回车 c:win+r–cmd–回车 C:win8下如何打开DOS控制台 a:鼠标左击开始–下箭头–命令提示符 b:鼠标右击开始–搜索–cmd–回车 c:鼠标右击开始–运行–cmd–回车 d:win+r–cmd–回车 01.06_计算机基础知识(常见的DOS命令讲解) A:d: 回车 盘符切换 B:dir(directory):列出当前目录下的文件以及文件夹 C:cd (change directory)改变指定目录(进入指定目录) D:cd.. : 退回到上一级目录 E:cd\\: 退回到根目录 F:cls : (clear screen)清屏 G:exit : 退出dos命令行(分割线上的需要掌握,下的了解) /========================================================= md (make directory) : 创建目录 rd (remove directory): 删除目录 del (delete): 删除文件,删除一堆后缀名一样的文件*.txt notepad 创建文件 删除带内容的文件夹 rd + /s 文件夹名称(询问是否删除) rd + /q + /s 文件夹名称(直接删除) 01.07_Java语言基础(Java语言概述)(了解) A:Java语言发展史 詹姆斯·高斯林（James Gosling）1977年获得了加拿大卡尔加里大学计算机科学学士学位，1983年获得了美国卡内基梅隆大学计算机科学博士学位，毕业后到IBM工作，设计IBM第一代工作站NeWS系统，但不受重视。后来转至Sun公司，1990年，与Patrick，Naughton和Mike Sheridan等人合作“绿色计划”，后来发展一套语言叫做“Oak”，后改名为Java。 SUN(Stanford University Network，斯坦福大学网络公司) B:Java语言版本 JDK 1.1.4 Sparkler 宝石 1997-09-12 JDK 1.1.5 Pumpkin 南瓜 1997-12-13 JDK 1.1.6 Abigail 阿比盖尔–女子名 1998-04-24 JDK 1.1.7 Brutus 布鲁图–古罗马政治家和将军 1998-09-28 JDK 1.1.8 Chelsea 切尔西–城市名 1999-04-08 J2SE 1.2 Playground 运动场 1998-12-04 J2SE 1.2.1 none 无 1999-03-30 J2SE 1.2.2 Cricket 蟋蟀 1999-07-08 J2SE 1.3 Kestrel 美洲红隼(sǔn) 2000-05-08 J2SE 1.3.1 Ladybird 瓢虫 2001-05-17 J2SE 1.4.0 Merlin 灰背隼 2002-02-13 J2SE 1.4.1 grasshopper 蚱蜢 2002-09-16 J2SE 1.4.2 Mantis 螳螂 2003-06-26 JAVASE 5.0 (1.5.0) Tiger 老虎 JAVASE 5.1 (1.5.1) Dragonfly 蜻蜓 JAVASE 6.0 (1.6.0) Mustang 野马 JAVASE 7.0 (1.7.0) Dolphin 海豚 C:Java语言平台 J2SE(Java 2 Platform Standard Edition)标准版 是为开发普通桌面和商务应用程序提供的解决方案,该技术体系是其他两者的基础，可以完成一些桌面应用程序的开发 J2ME(Java 2 Platform Micro Edition)小型版 是为开发电子消费产品和嵌入式设备提供的解决方案 J2EE(Java 2 Platform Enterprise Edition)企业版 是为开发企业环境下的应用程序提供的一套解决方案,该技术体系中包含的技术如 Servlet、Jsp等，主要针对于Web应用程序开发 C:Java语言特点 简单性 解释性 面向对象 高性能 分布式处理 多线程 健壮性 动态 结构中立 安全性 开源 跨平台 01.08_Java语言基础(Java语言跨平台原理)(掌握) A:什么是跨平台性 B:Java语言跨平台原理 只要在需要运行java应用程序的操作系统上，先安装一个Java虚拟机(JVM Java Virtual Machine)即可。由JVM来负责Java程序在该系统中的运行。 C:Java语言跨平台图解 write once ,run anywhere!(一处编译,到处运行) 01.09_Java语言基础(JRE和JDK的概述)(掌握) A:什么是JRE 包括Java虚拟机(JVM Java Virtual Machine)和Java程序所需的核心类库等，如果想要运行一个开发好的Java程序，计算机中只需要安装JRE即可。 JRE:JVM+类库。 B:什么是JDK JDK是提供给Java开发人员使用的，其中包含了java的开发工具，也包括了JRE。所以安装了JDK，就不用在单独安装JRE了。 其中的开发工具：编译工具(javac.exe) 打包工具(jar.exe)等 JDK:JRE+JAVA的开发工具。 C:为什么JDK中包含一个JRE 为什么JDK中包含一个JRE呢？ 开发完的程序，需要运行一下看看效果。 D:JDK,JRE,JVM的作用和关系 01.10_Java语言基础(JDK的下载和安装过程图解)(了解) A:JDK的下载 a:官网 http://www.oracle.com b:演示下载流程 B:JDK的安装 a:傻瓜式安装 双击安装程序，然后一路next即可(但是不建议) b:安装的推荐方式 安装路径不要有中文或者特殊符号如空格等。 所有和开发相关的软件最好安装目录统一。 举例：我的JDK安装路径 D:\\develop\\Java\\jdk1.7.0_72 当提示安装JRE时，可以选择不安装。建议还是安装上。 c:演示安装流程 可以先在d盘建立一个文件夹develop 然后演示安装过程 C:验证安装是否成功 a:通过DOS命令，切换到JDK安装的bin目录下。 D:\\develop\\Java\\jdk1.7.0_72\\bin b:然后分别输入javac和java，如果正常显示一些内容，说明安装成功 01.11_Java语言基础(JDK安装路径下的目录解释)(了解) a:bin目录：该目录用于存放一些可执行程序。 如javac.exe（java编译器）、java.exe(java运行工具)，jar.exe(打包工具)和* javadoc.exe(文档生成工具)等。 b:db目录：db目录是一个小型的数据库。 从JDK 6.0开始，Java中引用了一个新的成员JavaDB，这是一个纯Java实现、开源的数据库管理系统。这个数据库不仅轻便，而且支持JDBC 4.0所有的规范，在学习JDBC 时，不再需要额外地安装一个数据库软件，选择直接使用JavaDB即可。 c:jre目录：”jre”是 Java Runtime Environment 的缩写，意为Java程序运行时环境。此目录是Java运行时环境的根目录，它包括Java虚拟机，运行时的类包，Java应用启动器以及一个bin目录，但不包含开发环境中的开发工具。 d:include目录：由于JDK是通过C和C++实现的，因此在启动时需要引入一些C语言的头文件，该目录就是用于存放这些头文件的。 e:lib目录：lib是library的缩写，意为 Java 类库或库文件，是开发工具使用的归档包文件。 f:src.zip文件：src.zip为src文件夹的压缩文件，src中放置的是JDK核心类的源代码，通过该文件可以查看Java基础类的源代码。 01.12_Java语言基础(Java开发工具介绍)(了解) A:notepad(微软操作系统自带) B:Editplus/Notepad++ C:Eclipse D:MyEclipse 给大家简单的介绍一下这些工具，然后说说我们使用这些工具的顺序。 基础班：先notepad，然后Editplus，再Eclipse。 就业班：MyEclipse和Eclipse都用。 01.13_Java语言基础(HelloWorld案例的编写和运行)(掌握) A:定义类 B:写main方法 C:写输出语句 D:Java程序开发运行与工作原理 E:编译和运行程序12345class HelloWorld &#123; public static void main(String[] args) &#123; System.out.println(\"HelloWorld\"); &#125;&#125; 01.14_Java语言基础(HelloWorld案例常见问题)(掌握) A:找不到文件(都演示一下，让学生看看出现的都是什么问题) a:文件扩展名隐藏导致编译失败 b:文件名写错了 B:单词拼写问题(都演示一下，让学生看看出现的都是什么问题) a:class写成Class b:String写成string c:System写成system d:main写成mian C:括号匹配问题(都演示一下，让学生看看出现的都是什么问题) a:把类体的那对大括号弄掉一个 b:把方法体的那对大括号弄掉一个 c:把输出语句的那对小括号弄掉一个 D:中英文问题(都演示一下，让学生看看出现的都是什么问题) a:提示信息：错误: 非法字符: \\????的格式 注意：java编程中需要的基本上都是英文字符 01.15_Java语言基础(Java语言的书写格式(约定俗成)) (掌握) 1,大括号要对齐,并且成对写 2,左大括号前面有空格 3,遇到左大括号要缩进,Tab 4,方法和程序块之间加空行让程序看起来清晰 5,并排语句之间加空格,例如for语句 6,运算符两侧加空格 01.16_Java语言基础(path环境变量的作用及配置方式1)(掌握) A:在JDK的bin目录下开发程序容易产生的问题 a:如果文件过多，不方便管理 b:删除自己写过的不需要的文件，可能不小心把JDK自带的工具给删除了 B:如何解决问题呢 notepad这样的命令为什么在任何路径下都能够执行,配置path环境变量 C:配置方式 a:xp系统 右键点击桌面计算机→选择属性→选择高级选项卡→点击环境变量→下方系统变量中查找path→双击path→将jdk安装目录下的bin目录添加到最左边并添加分号。 b:win7/win8系统 右键点击桌面计算机→选择属性→选择高级系统设置→选择高级选项卡→点击环境变量→下方系统变量中查找path→双击path→将jdk安装目录下的bin目录添加到最左边并添加分号。 path配置的是可执行的文件.exe,配置后可以在不同的盘符下访问path路径下的可执行文件 01.17_Java语言基础(Path环境变量的配置方式2)(掌握) A:先配置JAVA_HOME B:再修改path C:最后说一下path是有先后顺序关系的 01.18_Java语言基础(classpath环境变量的作用及其配置)(了解) A:为什么要配置classpath B:classpath配置的原理 C:如何配置classpath 如果将Java执行环境比喻为操作系统，如果设置Path变量是为了让操作系统找到指定的工具程序(以Windows来说就是找到.exe文件)，则设置Classpath的目的就是让Java执行环境找到指定的Java程序(也就是.class文件)。 path和classpath的区别 path配置的是可执行的文件.exe,配置后可以在不同的盘符下访问path路径下的可执行文件 classpath配置的java的类文件,就是.class文件 01.19_Java语言基础(Editplus开发程序并编译运行)(了解) A:配置快捷键编译运行 B:去除备份文件 01.20_Java语言基础(注释概述及其分类)(掌握) A:什么是注释 B:注释的分类及讲解 文档注释目前不讲，说后面讲解 注释的作用 A:解释说明程序 B:帮助我们调试错误 01.21_Java语言基础(关键字的概述和使用)(掌握) A:什么是关键字 被Java语言赋予特定含义的单词 B:关键字的特点 组成关键字的字母全部小写 C:常见关键字 public static void class等 D:关键字的注意事项 goto和const作为保留字存在,目前并不使用,类似Editplus这样的高级记事本,针对关键字有特殊的颜色标记，非常直观 01.22_Java语言基础(标识符的概述和组成规则)(掌握) A:什么是标识符 就是给类,接口,方法,变量等起名字时使用的字符序列 B:标识符的组成规则 英文大小写字母 数字字符 $和__ C:标识符注意事项 1,不能使用关键字 2,不能数字开头 01.23_Java语言基础(标识符中常见的命名规则)(了解) 见名知意 A:包 最好是域名倒过来,要求所有的字母小写 B:类或者接口 如果是一个单词首字母大写 如果是多个单词每个单词首字母大写(驼峰标识) C:方法或者变量 如果是一个单词全部小写 如果是多个单词,从第二个单词首字母大写 D:常量 如果是一个单词,所有字母大写 如果是多个单词,所有的单词大写,用下划线区分每个单词 01.24_day01总结 把今天的知识点总结一遍。","tags":[{"name":"计算机基础知识","slug":"计算机基础知识","permalink":"http://harmansecurity.cn/tags/计算机基础知识/"},{"name":"Java语言基础","slug":"Java语言基础","permalink":"http://harmansecurity.cn/tags/Java语言基础/"}]},{"title":"2017年3月小记","date":"2017-03-19T14:07:22.000Z","path":"2017/03/19/2017年3月小记/","text":"最近一直在忙着挑战杯以及看论文写论文，没有太多的时间来写博客。回想之前做的事，虽然都是有收获的但是有些还是没继续做到最后。自从寒假前想清楚以后要做的是从事技术，一直在盘算着未来到底做哪一块，什么样的岗位，想更适合做哪些领域的工作，早作决定然后早点准备，打牢基础。 对待买书这件事上一直不是很吝啬的，从去年到现在购买书所花费的费用快接近千元了，很多书都过了一遍，有些经典的书一时半会儿还吃不完，等以后有时间慢慢消化。本科有一些Java前端和后台开发的基础，对我来说选择Java更容易上手。但是之前所学深感都是皮毛，为了开发一个东西而开发，理解的深度不够。最近新购了一批Java相关的书籍，利用接下来的时间过一遍，从最基础的开始，温故而知新。也在看某马的Java基础教程，发现有些基础知识已经遗忘，这套视频的好处，每节课都会有一个markdown写的笔记，我打算看完一节视频，更新一下笔记，虽然都是基础，但是牢牢掌握还是很有必要的。先从基础开始，然后多动手实践。上学期看的相关安全类的书和做的一些简单小实验对自己还是有很大启发的，以前的开发中从未考虑过安全，很多细节在之后的开发中都需要注意。下面的就是书单，在这边发上来，也督促自己先把这些书看完。","tags":[{"name":"小记","slug":"小记","permalink":"http://harmansecurity.cn/tags/小记/"}]},{"title":"ELK搭建社工库","date":"2017-02-25T07:07:21.000Z","path":"2017/02/25/ELK搭建社工库/","text":"一、简介1.核心组成ELK由Elasticsearch、Logstash和Kibana三部分组件组成； Elasticsearch是个开源分布式搜索引擎，它的特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。 Logstash是一个完全开源的工具，他可以对你的日志进行收集、过滤，并将其存储供以后使用（如，搜索）。 Kibana 也是一个开源和免费的工具，它Kibana可以为 Logstash 和 ElasticSearch 提供的日志分析友好的 Web 界面，可以帮助您汇总、分析和搜索重要数据日志。 2.三大组件 Logstash: logstash server端用来搜集数据； Elasticsearch: 存储各类数据； Kibana: web化接口用作查寻和可视化数据； 3.工作流程 以日志分析为例：Logstash收集AppServer产生的Log，并存放到ElasticSearch集群中，而Kibana则从ES集群中查询数据生成图表，再返回给Browser。 二、ELK搭建1.系统环境 win7(X86) ElasticSearch: 2.1.1 Logstash: 1.5.1 Kibana: 5.2.1 JDK1.8(安装java至少7以上的版本,并且配置JAVA_HOME环境变量) 2.安装Elasticsearch 下载地址：https://www.elastic.co/downloads/ 解压即可，配置文件elasticsearch.yml,默认也行。 12345#按照自己的需求修改也行，我选择的是默认，没有修改。cluster.name: esdemo #(集群的描述信息)node.name: 63 #(节点名称)network.host: 192.168.1.5 #(绑定的IP地址)http.port: 9200 #(端口号 默认9200) 执行elasticsearch.bat即可启动 访问http://localhost:9200可查看是否正常运行，运行成功效果如下： 3.安装Kibana 下载地址：https://www.elastic.co/downloads/ 解压即可，执行kibana.bat启动即可启动 访问http://localhost:5601可查看是否正常运行，运行成功效果如下： 4.安装logstash 下载地址：https://www.elastic.co/downloads/ 解压即可。 三、社工库搭建 因为是.sql文件，所以先导入mysql,然后再导出csv文件。也就是说不同的网站数据库最终全部是csv文件，并且是格式相同的csv。有字段不存在的则使用空字符替代。这样的话,可以在不更改logstash配置文件的情况下直接导入ES，也方便进行迁移。 数据库中的文件导出csv文件格式。 1select * from md5_sgk into outfile 'f://scolib.csv' fields terminated by ','optionally enclosed by ''lines terminated by '/n'; 新建logstash.config并进行配置。 1234567891011121314151617181920212223242526272829303132333435363738394041input&#123; file&#123; #需要被导入的数据库文件路径 path =&gt;&quot;f:/soclib.csv&quot; start_position =&gt;beginning &#125;&#125;filter&#123; grok&#123; #表达式路径，这里自定义了一行内容S \\s用来匹配换行符 patterns_dir =&gt;&quot;f:/test.txt&quot; #写入ES的字段名 match =&gt;&#123;&quot;message&quot;=&gt;&quot;%&#123;DATA:id&#125;,%&#123;DATA:username&#125;,%&#123;DATA:password&#125;,%&#123;DATA:email&#125;,%&#123;DATA:salt&#125;,%&#123;DATA:order&#125;&quot;&#125; &#125; grok&#123; #提取文件名 match =&gt;[&quot;path&quot;,&quot;f:/%&#123;GREEDYDATA:from&#125;\\.csv&quot;] &#125; mutate&#123; #删除一些ES自带的字段很占用空间 remove_field =&gt;[&quot;host&quot;,&quot;path&quot;,&quot;message&quot;] &#125;&#125;output&#123; elasticsearch&#123; #ES地址 hosts =&gt; &quot;localhost:9200&quot; #索引名称 index =&gt;&quot;sdb&quot; document_type =&gt;&quot;sdb&quot; #如果启用了shield则需要配置用户名和密码 #user =&gt;&quot;填写密码&quot; #password =&gt;&quot;填写用户名&quot; &#125; stdout&#123; codec=&gt;rubydebug &#125;&#125; 在logstash bin目录下面执行logstash.bat -f logstash.config 四、参考文献 http://www.tuicool.com/articles/uuaqeyf 百度搜索ELK，对原理有大概的了解。 五、总结 上一篇文章没有做任何的处理，直接通过sql语句进行查询，数据库中大概有九千万的数据，查询一次需要四分钟左右，速度还是很慢的，之前在论坛里听有人说用ELK搭建，所以这次就试了下。ELK处理数据应该是特别快的，不过真的很迟内存，按照我上面的步骤没有错，不过执行到最后一步，电脑内存耗尽直接有点死了，由于装的是32位的系统，占用内存本来就比较小，所以我就终止了程序。如果有人感兴趣的话电脑配置也比较高可以按照我的步骤执行下，一起交流。","tags":[{"name":"社工库","slug":"社工库","permalink":"http://harmansecurity.cn/tags/社工库/"},{"name":"Elasticsearch","slug":"Elasticsearch","permalink":"http://harmansecurity.cn/tags/Elasticsearch/"},{"name":"Logstash","slug":"Logstash","permalink":"http://harmansecurity.cn/tags/Logstash/"},{"name":"Kinaba","slug":"Kinaba","permalink":"http://harmansecurity.cn/tags/Kinaba/"}]},{"title":"搭建社工库","date":"2017-02-20T12:53:12.000Z","path":"2017/02/20/搭建社工库/","text":"社工库顾名思义就是社工数据库查询工具。网站自称可帮助您判断您的密码或个人信息是否已经被公开或泄漏，即如果您输入自己密码可以在社工库上查到，就意味着你的账号已被盗（过）。这两天正好得到了一些数据，简单做一个社工库。 简单介绍下MySql的使用 由于我之前的数据库中已经有数据为了方便演示，我把数据删掉，正好也回顾一下MySql的使用。我使用的是Navicat这个支持MySql的可视化工具，由于数据比较多，我直接从CMD终端进行操作删除。 很多时候我们电脑的MySQL服务没有开启，net start mysql开启MySQL服务。 进入MySQL数据库,在终端中输入mysql -u root -p,根据提示输入密码。 查看所有的数据库，show databases;我们会看到之前新建的数据库。 使用之前的数据库use &lt;库名&gt;;,然后查看当前数据库下面的表,show tables;。 删除表里面的所有数据delete from &lt;表名&gt;;。 处理数据，实现保存和查询的功能 我得到的数据是txt格式，每一行是用户名，密码，邮箱，由于这一行数据可能是以多个空格或者分号或者只有用户名没有密码，所以还需要对每一行的数据进行适当的处理然后保存到数据库中。我读取了一下txt文件，txt中有二百多万条数据，大概花了40秒左右，但是将数据存储到数据库中花的时间太长了，由于时间的原因，只向数据库中插入了十万多条数据。 对txt文件数据进行处理 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061public static void readFileByLines(String fileName)&#123; File file = new File(fileName); //用户名 String userName=null; //用户密码 String userPwd=null; //用户邮箱 String userMail=null; BufferedReader reader = null; try &#123; System.out.println(\"以行为单位读取文件内容，一次读一整行：\"); reader=new BufferedReader(new FileReader(file)); String tempString=null; int line=1; //开始时间 long startTime=System.currentTimeMillis(); // 一次读入一行，直到读入null为文件结束 while((tempString=reader.readLine())!=null)&#123; // 显示每行的数据 System.out.println(\"line \" + line + \": \" + tempString); //因为txt文件里每行数据可能是以多个空格或者;来分隔 String[] tempArray = tempString.split(\"\\\\s+|;\"); //有的数据里面只有用户名或者密码，缺少邮箱，不这样处理的话溢出 //如果字符串只有用户名和密码，那么字符数组的长度为2 //那么插入数据到数据库的时候，如果直接赋值tempArray[2]肯定会报错 if(tempArray.length==2)&#123; tempArray=(String[]) Arrays.copyOf(tempArray, tempArray.length+1); tempArray[tempArray.length-1]=\" \"; &#125; //System.out.println(tempArray[0]); //System.out.println(tempArray[1]); // System.out.println(tempArray[2]); //把拆分的数据分别赋值然后保存到数据库中 userName=tempArray[0]; userPwd=tempArray[1]; userMail=tempArray[2]; //把数据插入到数据库中 operateData.insertData(userName, userPwd, userMail); line++; &#125; //结束时间 long endTime=System.currentTimeMillis(); //程序运行的时间 double seconds=(endTime-startTime)/1000.0; System.out.println(\"程序运行的时间是：\"+seconds+\"s\"); //总共数据量 System.out.println(\"总共数据量是：\"+(line-1)); reader.close(); &#125; catch (IOException e) &#123; // TODO: handle exception e.printStackTrace(); &#125;finally&#123; if(reader!=null)&#123; try &#123; reader.close(); &#125; catch (IOException e1) &#123; // TODO: handle exception &#125; &#125; &#125;&#125; 将处理完的数据保存到数据库中(插入操作) 123456789101112131415161718/** * 将文本中的数据插入到数据库中 * @param userName * @param userPwd * @param userMail */static void insertData(String userName,String userPwd,String userMail)&#123; ConnDB cdb = new ConnDB(); String sql = \"insert into userInfo (userName,userPwd,userMail) values ('\"+userName+\"','\"+userPwd+\"','\"+userMail+\"')\"; //执行增删改 cdb.getModify(sql); //不知道是否插入成功，可通过下面的代码来判断 /* int i=cdb.getModify(sql); if(i==1) System.out.println(\"添加成功\"); else System.out.println(\"添加失败\");*/&#125; 对数据库中的数据进行查询(查询操作) 123456789101112131415161718192021222324252627282930/** * 根据用户名或者邮箱查询数据 * @param data */static void queryData(String data)&#123; String userName=null; ConnDB cdb = new ConnDB(); ResultSet rs = cdb.getSelect(\"select * from userinfo where userName='\"+data+\"' or userMail='\"+data+\"';\"); try &#123; while(rs.next())&#123; userName=rs.getString(\"userName\"); System.out.print(rs.getString(\"userName\")+\"\\t\"); System.out.print(rs.getString(\"userPwd\")+\"\\t\"); System.out.println(rs.getString(\"userMail\")); &#125; &#125; catch (SQLException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125;finally&#123; try &#123; if(userName==null)&#123; System.out.println(\"对不起，您查找的用户不存在！\"); &#125; cdb.closeResultSet(rs); &#125; catch (SQLException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; &#125;&#125; Eclipse控制台运行效果 该项目地址GitHUB：https://github.com/harmansecurity/SocilaLibrary 还是个小白，要学的东西还有很多，待会儿我把代码上传到我的GitHub中，等明天电脑到之后准备搭一个渗透环境，多实践。提到电脑还是很感动的，因为实验室到现在还没有配台式机(这里我就不吐槽这件事了)，跟朋友说了下目前的情况，立马把她的旧电脑寄给我做实验了，满满的感动，感激。时间的原因，我先暂时不做一个网页了，做一个搜索的网页无非就是一个搜索栏然后连接数据库查询数据，实现起来不是很难。如果对数据感兴趣的朋友可以私聊我或者留言，到时候转发给你，如果做违法犯罪行为，本人概不负责任。","tags":[{"name":"社工库","slug":"社工库","permalink":"http://harmansecurity.cn/tags/社工库/"},{"name":"Java","slug":"Java","permalink":"http://harmansecurity.cn/tags/Java/"},{"name":"MySql","slug":"MySql","permalink":"http://harmansecurity.cn/tags/MySql/"}]},{"title":"Http抓包与调试(Wireshark)","date":"2017-02-14T06:23:27.000Z","path":"2017/02/14/Http抓包与调试(Wireshark)/","text":"wireshark是非常流行的网络封包分析软件，功能十分强大。可以截取各种网络封包，显示网络封包的详细信息。使用wireshark的人必须了解网络协议，否则就看不懂wireshark了。为了安全考虑，wireshark只能查看封包，而不能修改封包的内容，或者发送封包。wireshark能获取HTTP，也能获取HTTPS，但是不能解密HTTPS，所以wireshark看不懂HTTPS中的内容，总结，如果是处理HTTP,HTTPS 还是用Fiddler, 其他协议比如TCP,UDP就用wireshark. 1.wireshark是搞IT经常用到的一个工具，主要整理了一下一些资料可供参考： http://blog.csdn.net/lina_acm/article/details/53404429 http://www.cnblogs.com/dragonir/p/6219541.html http://www.9upk.com/article/2537.html http://www.cnblogs.com/TankXiao/archive/2012/10/10/2711777.html http://blog.jobbole.com/70907/(一站式学习系列文章可以参考) 2.比较详细的wireshark过滤规则 http://blog.csdn.net/hzhsan/article/details/43453251 3.比较详细的wireshark使用教程文档 链接：http://pan.baidu.com/s/1nvCv52p 密码：s1vd 4.以上的资料就是介绍了wireshark的基本用法，下面的视频教程讲解wireshark更加的详细，有时间的话可以学习下： http://edu.51cto.com/lesson/id-62644.html","tags":[{"name":"Wireshark","slug":"Wireshark","permalink":"http://harmansecurity.cn/tags/Wireshark/"},{"name":"抓包分析","slug":"抓包分析","permalink":"http://harmansecurity.cn/tags/抓包分析/"}]},{"title":"解决端口被占用","date":"2017-02-10T12:45:13.000Z","path":"2017/02/10/解决端口被占用/","text":"1.开始—-&gt;运行—-&gt;cmd，调出命令窗口2.输入命令：netstat -ano，列出所有端口的情况。在列表中我们观察被占用的端口，比如是4000，首先找到它。 3.查看被占用端口对应的PID，输入命令：netstat -aon|findstr “4000”，回车，记下最后一位数字，即PID,这里是372 4.继续输入tasklist|findstr “372”，回车，查看是哪个进程或者程序占用了372端口 5.结束该进程：在任务管理器中选中该进程点击”结束进程“按钮，或者是在cmd的命令窗口中输入：taskkill /f /t /im nvvsvc.exe","tags":[{"name":"端口占用","slug":"端口占用","permalink":"http://harmansecurity.cn/tags/端口占用/"}]},{"title":"Http抓包与调试(Fiddler)","date":"2017-02-09T13:19:07.000Z","path":"2017/02/09/Http抓包与调试(Fiddler)/","text":"一、什么是Fiddler？ 1.Fiddler是位于客户端和服务器端的HTTP代理，也是目前最常用的http抓包工具之一。它能够记录客户端和服务器之间的所有HTTP请求，可以针对特定的HTTP请求，分析请求数据、设置断点、调试web应用、修改请求的数据，甚至可以修改服务器返回的数据，功能非常强大，是web调试的利器。既然是代理，也就是说：客户端的所有请求都要先经过Fiddler，然后转发到相应的服务器，反之，服务器端的所有响应，也都会先经过Fiddler然后发送到客户端，基于这个原因，Fiddler支持所有可以设置http代理为 127.0.0.1:8888 的浏览器和应用程序。使用了Fiddler之后，web客户端和服务器的请求如下所示: 2.Fiddler 作为系统代理，当启用Fiddler时，IE的PROXY设定会变成 127.0.0.1:8888，因此如果你的浏览器在开启fiddler之后没有设置相应的代理，则fiddler是无法捕获到HTTP请求的。如下是启动Fiddler之后，IE浏览器的代理设置： 3.以Firefox为例，默认情况下，firefox是没有启用代理的（如果你安装了proxy等代理工具或插件，是另外一种情况），在firefox中配置http代理的步骤如下：工具-&gt;选项-&gt;高级-&gt;网络-&gt;设置。并配置相应的代理如下就可以使用Fiddler抓取Firefox的HTTP请求了。 二、Fiddler使用界面简介Fiddler主界面的布局如下： 主界面中主要包括四个常用的块： Fiddler的菜单栏，上图绿色部分。包括捕获http请求，停止捕获请求，保存http请求，载入本地session、设置捕获规则等功能。 Fiddler的工具栏,上图红色部分。Replay：回放按钮; X：清空监控面板； Go：调试Debug； Stream：模式切换；（流模式与缓冲模式） Decode：解压请求； Keep session：保持会话； Any Process：过滤请求；（如只查看Chrome的请求） Find：查找； Save：保存会话； 保存截图； 计时器； Browser：快速启动浏览器； TextWizard：编码/解码；（非常常用） Tearoff：分离面板； MSDN Search：MSDN搜索； web Session面板，上图黄色区域，主要是Fiddler抓取到的每条http请求（每一条称为一个session）,主要包含了请求的url，协议，状态码，body等信息，详细的字段含义如下图所示： 详情和数据统计面板。针对每条http请求的具体统计（例如发送/接受字节数，发送/接收时间，还有粗略统计世界各地访问该服务器所花费的时间）和数据包分析。如inspector面板下，提供headers、textview、hexview,Raw等多种方式查看单条http请求的请求报文的信息：而composer面板下，则可以模拟向相应的服务器发送数据的过程（这就是灌水机器人的基本原理,也可以是部分http flood的一种方式）。也可以粘贴一次请求的raw http headers,达到模拟请求的目的： 三、Fiddler内置命令 为了更加方便的管理所有的session, Fiddler提供了一系列内置的函数用于筛选和操作这些session.输入命令的位置在websession管理面板的下方（通过快捷键alt+q可以focus到命令行）.Fiddler内置的命令有如下几种： 1. select命令。选择所有相应类型（指content-type）为指定类型的HTTP请求，如选择图片，使用命令select image.而select css则可以选择所有相应类型为css的请求，select html则选择所有响应为HTML的请求（怎么样，是不是跟SQL语句很像？）。如图是执行select image之后的结果： 2. allbut命令。allbut命令用于选择所有响应类型不是给定类型的HTTP请求。如allbut image用于选择所有相应类型不是图片的session(HTTP请求)，该命令还有一个别名keeponly.需要注意的是，keeponly和allbut命令是将不是该类型的session删除，留下的都是该类型的响应。因此，如果你执行allbut xxxx（不存在的类型），实际上类似与执行cls命令（删除所有的session, ctrl+x快捷键也是这个作用） 3. ?text命令选择所有 URL 匹配问号后的字符的全部 session 4. &gt;size 和 &lt;size命令选择响应大小大于某个大小（单位是b）或者小于某个大小的所有HTTP请求 5. =status命令选择响应状态等于给定状态的所有HTTP请求。例如，选择所有状态为200的HTTP请求：=200 6. @host命令选择包含指定 HOST 的全部 HTTP请求。例如：@csdn.net选择所有host包含csdn.net的请求 7. Bpafter， Bps, bpv, bpm, bpu这几个命令主要用于批量设置断点：Bpafter xxx: 中断 URL 包含指定字符的全部 session 响应Bps xxx: 中断 HTTP 响应状态为指定字符的全部 session 响应。Bpv xxx: 中断指定请求方式的全部 session 响应Bpm xxx: 中断指定请求方式的全部 session 响应。等同于bpv xxxBpu xxx:与bpafter类似。当这些命令没有加参数时，会清空所有设置了断点的HTTP请求。 四、Fiddler抓包分析 抓包是Fiddler的最基本的应用，在Fiddler的web session界面捕获到HTTP请求。各字段的详细说明已经解释过，这里不再说明。需要注意的是#号列中的图标，每种图标代表不同的相应类型，具体的类型包括： 另外，注意请求的host字段。可以看到有来自多个www.csdn.net的子域名的响应，说明在大型网站的架构中，大多需要多个子域名，这些子域名可能是单独用于缓存静态资源的，也可能是专门负责媒体资源的，或者是专门负责数据统计的（如pingback）。右键单击其中的一条请求。可以选择的操作有：save(保存请求的报文信息，可以是请求报文，可以是响应报文)。如果想要重新发送某些请求，可以选中这些请求，然后点击工具栏中的reply.就可以重新发送选中的这些请求。左键点击单条HTTP请求，可以在右侧的tab面板中看到如下信息：(1). Statistic。关于HTTP请求的性能和其他数据分析，使用Statistics页签，用户可以通过选择多个会话来得来这几个会话的总的信息统计，比如多个请求和传输的字节数。选择第一个请求和最后一个请求，可获得整个页面加载所消耗的总体时间。从条形图表中还可以分别出哪些请求耗时最多，从而对页面的访问进行访问速度优化。 (2). Inspectors。分为上下两个部分，上半部分是请求头部分，下半部分是响应头部分。对于每一部分，提供了多种不同格式查看每个请求和响应的内容。JPG 格式使用 ImageView 就可以看到图片，HTML/JS/CSS 使用 TextView可以看到响应的内容。Raw标签可以查看原始的符合HTTP标准的请求和响应头。Auth则可以查看授权Proxy-Authorization和Authorization的相关信息。Cookies标签可以看到请求的cookie和响应的set-cookie头信息。 Http Request HeaderCache 头域If-Modified-Since作用：把浏览器端缓存页面的最后修改时间发送到服务器去，服务器会把这个时间与服务器上实际文件的最后修改时间进行对比。如果时间一致，那么返回304，客户端 就直接使用本地缓存文件。如果时间不一致，就会返回200和新的文件内容。客户端接到之后，会丢弃旧文件，把新文件缓存起来，并显示在浏览器中。例如：If-Modified-Since: Thu, 09 Feb 2012 09:07:57 GMTIf-None-Match作用: If-None-Match和ETag一起工作，工作原理是在HTTP Response中添加ETag信息。 当用户再次请求该资源时，将在HTTP Request 中加入If-None-Match信息(ETag的值)。如果服务器验证资源的ETag没有改变（该资源没有更新），将返回一个304状态告诉客户端使用 本地缓存文件。否则将返回200状态和新的资源和Etag. 使用这样的机制将提高网站的性能例如: If-None-Match: “03f2b33c0bfcc1:0”Pragma作用：防止页面被缓存， 在HTTP/1.1版本中，它和Cache-Control:no-cache作用一模一样。Pargma只有一个用法，例如：Pragma: no-cache.注意: 在HTTP/1.0版本中，只实现了Pragema:no-cache, 没有实现Cache-Control。Cache-Control作用: 这个是非常重要的规则。 这个用来指定Response-Request遵循的缓存机制。各个指令含义如下 Cache-Control:Public 可以被任何缓存所缓存（） Cache-Control:Private 内容只缓存到私有缓存中 Cache-Control:no-cache 所有内容都不会被缓存 Client 头域 Accept: text/html代表浏览器可以接受服务器回发的类型为 text/html 也就是我们常说的html文档,如果服务器无法返回text/html类型的数据，服务器应该返回一个406错误(non acceptable)。 Accept: / 代表浏览器可以处理所有类型，(一般浏览器发给服务器都是发这个)。 Accept-Encoding：作用：浏览器申明自己接收的编码方法，通常指定压缩方法，是否支持压缩，支持什么压缩方法（gzip，deflate），（注意：这不是只字符编码）。 Accept-Language作用： 浏览器申明自己接收的语言。 User-Agent作用：告诉HTTP服务器， 客户端使用的操作系统和浏览器的名称和版本.我们上网登陆论坛的时候，往往会看到一些欢迎信息，其中列出了你的操作系统的名称和版本，你所使用的浏览器的名称和版本，这往往让很多人感到很神奇，实际上，服务器应用程序就是从User-Agent这个请求报头域中获取到这些信息User-Agent请求报头域允许客户端将它的操作系统、浏览 器和其它属性告诉服务器。 Accept-Charset作用：浏览器申明自己接收的字符集，这就是本文前面介绍的各种字符集和字符编码，如gb2312，utf-8（通常我们说Charset包括了相应的字符编码方案） Cookie/Login 头域Cookie:作用：最重要的header, 将cookie的值发送给HTTP 服务器 Entity头域Content-Length作用：发送给HTTP服务器数据的长度。 Content-Type: application/x-www-form-urlencoded Miscellaneous 头域Referer:作用：提供了Request的上下文信息的服务器，告诉服务器我是从哪个链接过来的，比如从我主页上链接到一个朋友那里，他的服务器就能够从HTTP Referer中统计出每天有多少用户点击我主页上的链接访问他的网站。 Transport 头域Connection 例如：Connection: keep-alive 当一个网页打开完成后，客户端和服务器之间用于传输HTTP数据的TCP连接不会关闭，如果客户端再次访问这个服务器上的网页，会继续使用这一条已经建立的连接 例如：Connection: close 代表一个Request完成后，客户端和服务器之间用于传输HTTP数据的TCP连接会关闭， 当客户端再次发送Request，需要重新建立TCP连接。 Host（发送请求时，该报头域是必需的）作用: 请求报头域主要用于指定被请求资源的Internet主机和端口号，它通常从HTTP URL中提取出来的。例如: 我们在浏览器中输入：http://www.guet.edu.cn/index.html。浏览器发送的请求消息中，就会包含Host请求报头域，如下：Host：http://www.guet.edu.cn此处使用缺省端口号80，若指定了端口号，则变成：Host：指定端口号 (3). AutoResponder。Fiddler比较重要且比较强大的功能之一。可用于拦截某一请求，并重定向到本地的资源，或者使用Fiddler的内置响应。可用于调试服务器端代码而无需修改服务器端的代码和配置，因为拦截和重定向后，实际上访问的是本地的文件或者得到的是Fiddler的内置响应。当勾选EnableRules并设置相应的规则后（本例中的规则是将http://www.cnblogs.com/HYanqing/p/5294968.html的请求拦截到本地的文件）,如下图所示: 然后在浏览器中访问http://www.cnblogs.com/HYanqing/p/5294968.html，得到的结果实际为本地的网页。说明请求已经成功被拦截到本地.当然也可以使用Fiddler的内置响应。因此如果要调试服务器的某个脚本文件，可以将该脚本拦截到本地，在本地修改完脚本之后，再修改服务器端的内容，这可以保证，尽量在真实的环境下去调试，从而最大限度的减少bug发生的可能性。不仅是单个url，Fiddler支持多种url匹配的方式：I. 字符匹配如 example可以匹配 http://www.example.com和http://example.com.cnII. 完全匹配以EXACT开头表示完全匹配，如上边的例子EXACT:http://www.cnblogs.com/HYanqing/p/5294968.htmlIII. 正则表达式匹配以regex: 开头，使用正则表达式来匹配URL.如：regex:(?insx).*\\.(css|js|php)$ 表示匹配所有以css,js,php结尾的请求url(4). Composer。（模拟请求）老版本的fiddler中叫request-builder.顾名思义，可以构建相应的请求，有两种常用的方式构建请求:(1)Parsed 输入请求的url之后executed即可，也可以修改相应的头信息（如添加常用的accept, host, referrer, cookie，cache-control等头部）后execute.这个功能的常见应用是：“刷票”（不是火车票！！），如刷新页面的访问量。(2)Raw。使用HTTP头部信息构建http请求。与上类似。不多叙述(5). Filter。Fiddler另一个比较强大的功能。Fiddler提供了多维度的过滤规则，足以满足日常开发调试的需求。过滤规则有：a. host和zone过滤。可以过滤只显示intranet或则internet的HTTP请求。也可以选择特定域名的HTTP请求。b. client process:可以捕获指定进程的请求。这对于调试单个应用的请求很有帮助。五、Fiddler中设置断点修改Request Fiddler最强大的功能莫过于设置断点了，设置好断点后，你可以修改httpRequest的任何信息包括host,cookie或者表单中的数据。设置断点有两种方法：第一种：打开Fiddler 点击Rules-&gt; Automatic Breakpoint -&gt;Before Requests(这种方法会中断所有的会话)如何消除命令呢？ 点击Rules-&gt; Automatic Breakpoint -&gt;Disabled第二种: 在命令行中输入命令: bpu www.baidu.com (这种方法只会中断www.baidu.com)如何消除命令呢？ 在命令行中输入命令 bpu看个实例，模拟麦子学院的登录，在火狐中打开麦子学院的登录页面，输入错误的用户名和密码，用Fiddler中断会话，修改成正确的用户名密码。这样就能成功登录：1. 用火狐打开麦子学院的登录界面 http://www.maiziedu.com/2. 打开Fiddler, 在命令行中输入bpu http://www.maiziedu.com/3. 输入错误的用户名和密码，点击登录4. Fiddler 能中断这次会话，选择被中断的会话，点击Inspectors tab下的WebForms tab 修改用户名密码，然后点击Run to Completion 如下图所示:5. 结果是正确地登录了麦子学院六、Fiddler中设置断点修改Response当然Fiddler中也能修改Response：第一种：打开Fiddler 点击Rules-&gt; Automatic Breakpoint -&gt;After Response (这种方法会中断所有的会话)如何消除命令呢？ 点击Rules-&gt; Automatic Breakpoint -&gt;Disabled第二种: 在命令行中输入命令: bpuafter www.baidu.com (这种方法只会中断www.baidu.com)如何消除命令呢？ 在命令行中输入命令 bpuafter 七、Watcher(安全扫描工具，第三方扩展) Watcher是一个实时的，被动分析基于HTTP协议的Web应用程序的安全工具(Fiddler插件)。所谓被动分析就是指它不会对现有系统产生任何破坏。Watcher可以被安全的用于分布式网络，共享式网络和专用宿主网络。Watcher能够自动检查这些问题：cookie设置、SSL配置、信息泄露等。另外，Watcher是一个非常好的HTTP协议调试工具，不过，它的HTTP调试功能是以Fiddler插件方式工作的。总之，Watcher是一个很好的渗透测试工具，有助于渗透测试人员的渗透测试工作。 八、参考文献 http://www.cnblogs.com/HYanqing/p/5294968.html http://blog.csdn.net/ohmygirl/article/details/17846199 http://blog.csdn.net/ohmygirl/article/details/17849983 http://www.imooc.com/course/note/id/37?sort=last&amp;page=1 http://www.freebuf.com/sectool/6770.html","tags":[{"name":"Http抓包与调试","slug":"Http抓包与调试","permalink":"http://harmansecurity.cn/tags/Http抓包与调试/"},{"name":"Fiddler","slug":"Fiddler","permalink":"http://harmansecurity.cn/tags/Fiddler/"},{"name":"浏览器代理","slug":"浏览器代理","permalink":"http://harmansecurity.cn/tags/浏览器代理/"},{"name":"拦截请求或响应","slug":"拦截请求或响应","permalink":"http://harmansecurity.cn/tags/拦截请求或响应/"},{"name":"抓包和重放","slug":"抓包和重放","permalink":"http://harmansecurity.cn/tags/抓包和重放/"}]},{"title":"Http抓包与调试(Firefox插件)","date":"2017-01-19T08:22:55.000Z","path":"2017/01/19/Http抓包与调试(Firefox插件)/","text":"这边主要介绍火狐的几款插件工具分别是Firebug、TamperData、LiveHttpHeaders、Hackbar和ModifyHeaders，它们可以用来测试和发掘Web应用程序中的跨站漏洞。 1.Firebug(抓包与各种调试) Firebug是Firefox浏览器的一个扩展插件，可以动态修改html代码、探索DOM结构、监视网络请求和响应、调试和监测任何页面的CSS、HTML和JavaScript等等。 1)安装城成功后按F12启动Firebug 打开Firebug后，看到六个标签按钮分别是（控制台、HTML查看器、CSS查看器、脚本调试器、DOM查看器、网络状况监视器）。 2)控制台 控制台能够显示当前页面中的JavaScript错误以及警告，并提示出错的文件和行号，使用控制台可以测试一段代码或者函数的执行时间。启用控制台，在窗口的底部能看到命令行输入，以“&gt;”开头，在这里输入JavaScript代码后按Enter键即可执行。 3)动态修改HTML元素 Frebug可以显示脚本输出的最终源代码，而html查看器只能显示页面本身的源代码。单击查看页面元素按钮，当光标停留在某个元素上时，浏览器会高亮显示对应元素，可以对页面文本节点进行修改，其修改结果马上回反映到浏览器窗口。 4)查看网络状况 将Frebug的当前标签切换到“网络”，该标签用来监控网络流量。如果通过XMLHttpRequest对象向服务器端发出一个请求，Firebug会记录该请求的GET或者POST内容，以及回应的头信息和内容。Firebug也能将页面中的CSS、JavaScript以及网页中引用的图片载入所消耗的时间以矩状图显示出来，通过右键就可以复制文件地址、HTTP请求头的信息和响应头信息等等。以登录麦子学院网站为例，惊奇的发现它的账号和密码都是明文传输。:) 5)DOM查看器 DOM包含了大量的对象以及函数，事件，通过使用Firebug可以检查当前打开程序的各个部分。 2.Tamper Data(拦截修改) 当测试Web应用程序的安全性的时候，经常会需要对HTTP流量进行分析和动态的修改，这时就需要用到这款工具。安装成功后，在Firefox的工具栏打开，随后在浏览网页的时候发出的每一个Http请求及其对应的响应都会被Tamper Data记录下来。 1)Tamper Data界面主要是由三部分组成 第一部分：（上方）HTTP请求概要信息 第二部分：（左下方）显示出对应的HTTP请求的头部信息 第三部分：（右下方）显示出对应的HTTP响应 2)查看细节、源码信息以及网页打开时间 在主窗口的第一部分单击鼠标右键，此时可以查看细节、源代码信息，单击【GraphAll】按钮，会以图形的方式直观地显示每个页面元素及其打开它们所花的时间。 3)Http请求截取 在Tamper Data中选择StartTamper菜单项，便开启了对HTTP请求的截取，此时浏览器发出的每一个请求，TamperData都会截取。在开启该功能后单击网页上的任意超链接，便可以看到浏览器弹出一个对话框，然后单击【Tamper】按钮，会弹出一个“TamperPopup”窗口，这个窗口显示了HTTP请求的各种头信息，可以在此随意修改或者添加其他合法的HTTP请求头部字段或POST参数。 3.Live HTTP Headers(重放功能) Live HTTP Headers是一款用来分析HTTP流量的Firefox扩展插件，直接在火狐浏览器里面搜索即可安装。 窗口底部有一个“capture”复选框，选中后可以使LIVE HTTP Headers 停止向下滚动，以便对已经产生的通信流量进行分析 在主窗口选择其中一段请求，然后单击窗口底部的“Replay”按钮会弹出窗口，可对请求进行各种修改，修改后再次单击“replay”可重放请求。 4.Hackbar(编码解码/POST提交) HackBar是firefox浏览器上的一个插件,安装方法跟之前的几个插件一样。HackBar其实是一个小工具包，包含一些黑客常用的工具。比如SQL injection,XSS,加密等!功能很多可以下载下来去尝试一下。 load url是将地址栏中的网络复制到hackbar中 在sql注入中有一个联合查询，比如字段数是11要是手工的话我们打出union select 1,2,3,4,5,6,7,8,9,10,11这样感觉有点麻烦。通过hackbar的sql选项里面的unionselectstatement在其中输入字段数，hackbar会自动的帮助我们输入那一大串文字。 我们可以对url进行各种编码操作，我们可以在endoding选项下进行url、16进制、base64进行编码解码，可以在xss选项下进行html实体编码，在sql选项下进行空格编码。 在encryption选项中我们可以进行md5,sha1，sha256，rot13加密，单击里面的选项，在弹出的对话框中输入要加密的数据。 5.Modify Headers(修改头部) 这个插件的主要作用是对Firefox的HTTP request headers进行添加、修改和过滤等操作。当我们访问网站的时候，某些网站服务器会对访问网站的浏览器Header信息进行判断，然后决定用什么方式把网站内容呈现给浏览器。服务器也会根据浏览器的header中包含的其他信息（譬如浏览器所在的IP地址）判断是否要讲某一特定的信息呈现给浏览器。 选择Add，右边的HeaderName,HeaderValue和DescriptiveComment等字段都会变得可编辑。由于我们要模拟不同地域的IP对网站进行访问(伪造IP地址)，所以HeaderName字段中，我们填入X-Forwarded-For。Header value中，填入你要模拟的地域IP地址，然后在Descriptive comment中填上备注就好。 User Agent中文名为用户代理，简称 UA，它是一个特殊字符串头，使得服务器能够识别客户使用的操作系统及版本、CPU类型、浏览器及版本、浏览器渲染引擎、浏览器语言、浏览器插件等。修改User-Agent来模拟用iPhone访问网站。 伪造IP地址和修改了User Agent，看一下访问百度的请求头信息发生了什么变化。","tags":[{"name":"Http抓包与调试","slug":"Http抓包与调试","permalink":"http://harmansecurity.cn/tags/Http抓包与调试/"},{"name":"Firebug","slug":"Firebug","permalink":"http://harmansecurity.cn/tags/Firebug/"},{"name":"Tamper Data","slug":"Tamper-Data","permalink":"http://harmansecurity.cn/tags/Tamper-Data/"},{"name":"LiveHttpHeaders","slug":"LiveHttpHeaders","permalink":"http://harmansecurity.cn/tags/LiveHttpHeaders/"},{"name":"Hackbar","slug":"Hackbar","permalink":"http://harmansecurity.cn/tags/Hackbar/"},{"name":"Modify Headers","slug":"Modify-Headers","permalink":"http://harmansecurity.cn/tags/Modify-Headers/"}]},{"title":"PBC库的常用函数解释","date":"2017-01-18T10:59:57.000Z","path":"2017/01/18/PBC库的常用函数解释/","text":"PBC库使用G1、G2和GT分别表示双线性映射:e:G1xG2-&gt;GT中的G1、G2和GT，他们的阶都为r。Zr表示模r的整数环。配对运算输入两个元素，一个元素来自群G1，另一个元素来自群G2，输出结果是GT中的一个元素。G1和G2也可以是同一个群，即是一个对称配对，这种情况下它们的元素可以相互混淆使用。 1.配对的初始化方式1) 以标准的方式初始化配对12pairing_t pairing;//声明一个配对类型的变量pairingpairing_init_inp_str(pairing,stdin);//参数stdin表示配对的输入参数方式为标准输入 2) 指定类型的方式初始化配对1234a_param_input(pairing);//将配对变量pairing初始化为类型A的配对d_param_input(pairing);//将配对变量pairing初始化为类型D的配对f_param_input(pairing);//将配对变量pairing初始化为类型F的配对pairing_clear(pairing);//调用该函数释放pairing占用的资源 2.元素的初始化1234567void element_init(element_t e,field_ptr f);//将元素变量e初始化为代数结构f中的元素void element_init_G1(element_t e,pairing_t pairing);//将元素变量e初始化为群G1中的元素void element_init_G2(element_t e,pairing_t pairing);//将元素变量e初始化为群G2中的元素void element_init_GT(element_t e,pairing_t pairing);//将元素变量e初始化为群GT中的元素void element_init_Zr(element_t e,pairing_t pairing);//将元素变量e初始化为群Zr中的元素void element_init_same_as(element_t e,element_t e2);//将元素变量e初始化为元素变量e2所在的代数结构中的元素void element_clear(element_t e);//清楚元素变量e并释放其所占用的资源 3.运算函数1234567891011121314151617void element_add(element_t n,element_t a,element_t b);//输入a和b，输出n=a+bvoid element_sub(element_t n,element_t a,element_t b);//输入a和b，输出n=a-bvoid element_mul(element_t n,element_t a,element_t b);//输入a和b，输出n=axbvoid element_mul_si(element_t n,element_t a,signed long int z);//输入a和z，输出n=axz,z是一个长整型数据void element_mul_zn(element_t n,element_t a,element_t z);//输入a和z，输出n=axz,z是整数环中的一个元素void element_div(element_t n,element_t a,element_t b);//输入a和b，输出n=a/bvoid element_double(element_t n,element_t a);//输入a，输出n=a+avoid element_halve(element_t n,element_t a);//输入a，输出n=a/2void element_square(element_t n,element_t a);//输入a，输出n=a^2void element_neg(element_t n,element_t a);//输入a，输出n=-avoid element_invert(element_t n,element_t a);//输入a，输出a的逆元nvoid element_pow_mpz(element_t x,element_t a,mpz_t n);//输入a和n，输出x=a^nvoid element_pow_zn(element_t x,element_t a,element_t n);//输入a和n，输出x=a^n，n是整数环中的元素//输入a1,a2和n1,n2，输出x=a1^n1xa2^n2void element_pow2_mpz(element_t x,element_t a1,mpz_t n1,element_t a2,mpz_t n2);//输入a1,a2和n1,n2，输出x=a1^n1xa2^n2,n1,n2是整数环中的元素void element_pow2_zn(element_t x,element_t a1,element_t n1,element_t a2,element_t n2); 4.其它函数1234567int element_length_in_bytes(element_t e);//获得元素变量e的字节数void element_random(element_t e);//函数从这个代数结构中均匀随机选择一个元素并赋值给eint element_cmp(element_t a,element_t b);//若变量a和b相等，则函数返回0否则返回1void element_to_mpz(mpz_t z,element_t e);//将元素e转换为一个GMP整数并存储在mpz_t类型的变量z中//PBC库中没有提供计算Hash值的函数，这里只是以获得的Hash值作为输入，从中截取一部分表示域中的某个元素void element_from_hash(element_t e,void * data,int len);int element_printf(const char * format,...);//格式化打印元素值 以上列举了PBC库中的一些常用函数及其代表的意思，如有特殊需求可查阅PBC官方文档。","tags":[{"name":"PBC","slug":"PBC","permalink":"http://harmansecurity.cn/tags/PBC/"},{"name":"密码学","slug":"密码学","permalink":"http://harmansecurity.cn/tags/密码学/"},{"name":"双线性配对","slug":"双线性配对","permalink":"http://harmansecurity.cn/tags/双线性配对/"}]},{"title":"VC6.0插件安装","date":"2017-01-17T06:49:04.000Z","path":"2017/01/17/VC6.0插件安装/","text":"因为PBC源码库的一些函数不是很全，导致用VS写了几个程序只好放弃，而支持VC6.0的PBC库比较全，绕了一圈所以只好转战VC++6.0。VC++6.0是一款很老的工具，不是很人性化，对于我这个深度完美主义者肯定是不能接受的，想方设法使它更适合开发，所以安装了一些插件，使开发效率更高。 我主要安装的插件是:1.Visual studio Boosteer;(源码窗口管理) 下载地址:http://pan.baidu.com/s/1pJAZApP. 功能:方便查看源码，一页里面可以打开多个C文件。 2.Visual assist Options;(强烈推荐) 下载地址:http://pan.baidu.com/s/1dDh7Mtb. 功能:自动识别各种关键字，系统函数，成员变量，自动给出输入提示，自动更正大小写错误，自动标示错误等等。 3.为了解决VC++6.0不能添加和打开文件的功能安装了FileTool。 下载地址:http://download.csdn.net/detail/ttfy1234/9696351. 功能:VC6.0在添加和打开文件时经常会崩掉，这个插件就是为了解决这个问题。 4.VC6LineNumberAddin; 下载地址:http://pan.baidu.com/s/1dD8CfGd 功能:VC6.0不自带行号，不方便阅读查找，这个是行号插件。 5.Comment Wizard; 下载地址:http://www.cppblog.com/fwxjj/. 功能:Visual C++插件，提供了VC源代码注解标准化与自动化功能。在它的帮助下，您可快速创建标头文件信息注解，文件中模块注解， C++处理方式，以及Ｃ语言功能与历史校正功能注解等等。 6.WndTabs+3.20 实现窗口tab效果。 下载地址:http://www.wndtabs.com/. 功能:WndTabs主要是在编辑窗口中显示了所有已经打开的文件，在VC中能够更方便的操作这些文件，比如修改文件属性，copy文件路径、文件名等,与第一个VS Booster的功能相近。 参考的资料: http://blog.csdn.net/cooljun618/article/details/6866798 http://bbs.csdn.net/topics/390776572 一个人性化的环境搭好了,下面就是导入项目，官网给的支持VC的PBC源码直接打开有点问题，这边我直接把调通好的源码放在GitHub上面，有需要的人可以去下载，地址是:https://github.com/harmansecurity/PBC-0.4.7-vc6.0.","tags":[{"name":"PBC","slug":"PBC","permalink":"http://harmansecurity.cn/tags/PBC/"},{"name":"密码学","slug":"密码学","permalink":"http://harmansecurity.cn/tags/密码学/"},{"name":"VC6.0","slug":"VC6-0","permalink":"http://harmansecurity.cn/tags/VC6-0/"}]},{"title":"这半年为什么止步不前？","date":"2017-01-15T14:42:06.000Z","path":"2017/01/15/2016总结/","text":"时间过得很快，读研已半年，这半年来我一直都没好好想过这个问题，这半年我到底做了什么？我试着给自己答案——积累、沉淀，但是却有种莫名的心虚。 回顾2016年下半年的历程。七月份，在中科院信工所的物联网安全研发中心实习。去之前，本以为是朝九晚五的上班场景，心里还是忐忑的，结果与我想的截然相反，这里都是研究生，学习氛围很浓厚。那段日子应该就是我研究生阶段的预备期，或许是因为仰慕那些学姐学长基础扎实，编码能力强，为了缩短差距，我坚持每天早晨八点打卡，每晚坚持跑步回去到宿舍已基本十二点，从未给过自己一天的休息时间。当时我的任务是“如何检测内存异常访问”，因为项目的需求，需要了解Linux内核，期间泛读了《Python核心编程》、《鸟哥的Linux私房菜》、《Linux内核完全注释》(强烈推荐)，这三本书可以当做字典来用，没有必要全部读完。也重温了《计算机操作系统》、《计算机组成原理》、《深入理解计算机系统》。在这次实习中，最大的感受就是理论知识的缺乏，大学里面的基础课程在日后还是有很大作用的，于是决定利用接下来的三年时间多积累沉淀，多看些书。 入学的那段时间还是比较空闲的，我的计划是先看两本自己研究领域的书籍，虽然导师这边是偏理论，但其实自己对应用还是很热衷的，所以决定再看两本WEB安全的入门书籍。所看的密码学书：《图解密码技术》、《深入浅出密码学》、《基于配对的密码学》；WEB安全相关的书：《WEB安全前端黑客技术解密》、《XSS跨站脚本》(未读完)、《SQL注入攻击与防御》(未读)，此外对余弦发布的技能表做了相应的对照学习。 写到这里，也差不多能知道问题出在哪了：在理论上没有多大的进展，仍处于连门都没入的阶段，程序写的不多，没有学习太多的新技术，这就是莫名心虚的原因。最初的想法是先偏理论，不管是否选择继续走学术这条路都要发论文，研一暑假再决定最终是否工作。可能是心急了，要是很多东西一下子就能见成果，那就没多大意义了。或许临近期末的原因，躁动不安，扰乱了情绪，胡思乱想。 —2016.1.5 by LiangHui 最近也在思考，当初为什么会有读博的想法？“因为之前做的一些东西，只知道如何去实现而不知道机制和原理，想在博士期间好好深入研究。”通过这半年的了解,很多其实并不是当初所想的那样，博士是在一个很小的方向上进行研究并能作出自己的突破。如果读现在的方向的博士达不到当初想要的效果，所以必须明确到底想要什么！接下来的一年将会把重心放在web安全技术上，利用空余的时间多读点书，多去实践。早做决定，早做打算。 —2016.1.15","tags":[{"name":"总结","slug":"总结","permalink":"http://harmansecurity.cn/tags/总结/"}]}]